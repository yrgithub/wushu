<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--此文件负责整个mvc中的配置-->
    <!--启用spring的一些annotation 如果有<context:component-scan>标签那么该标签就不会产生作用-->
   <!-- <context:annotation-config/>-->
    <!-- 自动扫描装配 -->
    <!--　这样的声明未免太不优雅，而Spring为我们提供了一种极为方便注册这些BeanPostProcessor的方式，
    即使用<context:annotation- config/>隐式地向 Spring容器注册
    AutowiredAnnotationBeanPostProcessor、
    RequiredAnnotationBeanPostProcessor、
    CommonAnnotationBeanPostProcessor以及PersistenceAnnotationBeanPostProcessor这4个BeanPostProcessor-->
    <context:component-scan base-package="com.xiongdiyibeizi"/>
    <context:property-placeholder location="classpath:properties/server.properties"/>
    <!-- 配置注解驱动 可以将request参数与绑定到controller参数上 -->
    <!--<mvc:annotation-driven>会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean-->
    <mvc:annotation-driven/>	 
    <!-- 启用注解 -->
	<context:annotation-config/>
	<!--将静态资源交由默认的servlet处理-->
	<mvc:default-servlet-handler/>
    <!--静态资源映射-->
    <!--本项目把静态资源放在了webapp的statics目录下，资源映射如下-->
    <!--location是工程路径地址，而mapping是映射的地址，就是说可以通过mapping映射的url来定位静态资源的位置-->
    <mvc:resources mapping="/js/**" location="/js/"/>
    <mvc:resources mapping="/css/**" location="/css/"/>
    <mvc:resources mapping="/images/**" location="/images/"/>
    <mvc:resources mapping="/files/**" location="/files/"/>
    <mvc:resources mapping="/plugins/**" location="/plugins/"/>
    <mvc:resources mapping="/pages/**" location="/pages/"/>
    <!-- 配置文件解析器 ,id固定 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    	<!-- 上传文件的最大值： 100M，单位是字节 -->
    	<property name="maxUploadSize" value="10240000"></property>
    </bean>
</beans>