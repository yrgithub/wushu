<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

    <description>Shiro 配置</description>

    <bean id="logoutFilter" class="com.xiongdiyibeizi.shiro.SystemLogoutFilter">
        <property name="redirectUrl" value="/pages/backend/login.html"/>
    </bean>

    <bean id="filterFactoryBeanMap" class="com.xiongdiyibeizi.shiro.FilterFactoryBeanMap"/>
    <bean id="filterChainMap" factory-bean="filterFactoryBeanMap" factory-method="getShiroFilterChainMap"/>
    <!--shiroFilter的bean Name必须与web.xml中shiro filter的名字一致-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <property name="loginUrl" value="/pages/backend/login.html"/>
        <property name="successUrl" value="/pages/backend/main.html"/>
        <!-- 用户访问未对其授权的资源时,所显示的连接 -->
        <property name="unauthorizedUrl" value="/pages/backend/unauthorized.html"/>

        <!-- 读取自定义权限内容
        1）anon 可以匿名访问
        2）authc 必须认证（即登录）后才能访问
        3)url匹配采用第一次匹配优先的方式
        4)logout登出过滤器
        5）role 角色过滤器
        -->
        <property name="filters">
            <map>
                <entry key="logout" value-ref="logoutFilter"></entry>
            </map>
        </property>
        <property name="filterChainDefinitionMap" ref="filterChainMap"/><!--配置过滤器及URL从数据库获取-->
    </bean>


    <bean id="myRealm" class="com.xiongdiyibeizi.shiro.MyRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"></property><!--指定加密算法-->
                <property name="hashIterations" value="1024"></property><!--指定加密次数-->
            </bean>
        </property><!--密码匹配器-->
    </bean>

    <bean id="modularRealmAuthenticator" class="org.apache.shiro.authc.pam.ModularRealmAuthenticator">
         <property name="authenticationStrategy">
             <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
         </property>
    </bean>
    <!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--  设置自定义realm  ref="iniRealm,mySecurityRealm" -->
        <!-- <property name="realm" ref="myRealm"/> -->
        <property name="authenticator" ref="modularRealmAuthenticator"></property>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="realm">
                <ref bean="myRealm"></ref>
        </property>
    </bean>

    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator">
    </bean>

    <bean id="sessionDao" class="com.xiongdiyibeizi.shiro.MySessionDao">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionDAO" ref="sessionDao"/>
    </bean>
    <!--保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>

    <!-- 用于开启 Shiro Spring AOP 权限注解的支持 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

</beans>